on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
      - dev
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - main
      - master
      - dev

jobs:
  secrets-gate:
    environment: SECRET-GATE
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    runs-on: ubuntu-latest
    outputs:
      ok: ${{ steps.check-secrets.outputs.ok }}
    steps:
      - name: check for secrets needed to run SonarQube
        id: check-secrets
        run: |
          if [ ! -z "${{ secrets.SONAR_TOKEN }}" ] && [ ! -z "${{ secrets.SONAR_HOST_URL }}" ]; then
            echo "::set-output name=ok::true"
          fi

  sonarqube:
    environment: SCORING
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    needs:
      - secrets-gate
    if: ${{ needs.secrets-gate.outputs.ok == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "yarn"

      - name: Generate webapp coverage
        run: |
          yarn install
          yarn coverage
        env:
          CI: true

      - name: SonarQube scan ðŸš¨
        uses: sonarsource/sonarqube-scan-action@master
        with:
          args: >
            -Dsonar.projectKey=${{ github.event.repository.name }}
